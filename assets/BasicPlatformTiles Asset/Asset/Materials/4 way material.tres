[gd_resource type="ShaderMaterial" load_steps=38 format=2]

[ext_resource path="res://assets/BasicPlatformTiles Asset/Asset/Textures/TilesAtlas/TilesAtlas_Roughness.png" type="Texture" id=1]
[ext_resource path="res://assets/BasicPlatformTiles Asset/Asset/Textures/BrickAtlas/BrickAtlas_Albedo.png" type="Texture" id=2]
[ext_resource path="res://assets/BasicPlatformTiles Asset/Asset/Textures/BrickAtlas/BrickAtlas_Normal.png" type="Texture" id=3]
[ext_resource path="res://assets/BasicPlatformTiles Asset/Asset/Textures/WoodAtlas/WoodAtlas_Albedo.png" type="Texture" id=4]
[ext_resource path="res://assets/BasicPlatformTiles Asset/Asset/Textures/GRassAtlas/GRassAtlas_Albedo.png" type="Texture" id=5]
[ext_resource path="res://assets/BasicPlatformTiles Asset/Asset/Textures/TilesAtlas/TilesAtlas_Albedo.png" type="Texture" id=6]
[ext_resource path="res://assets/BasicPlatformTiles Asset/Asset/Textures/WoodAtlas/WoodAtlas_Normal.png" type="Texture" id=7]
[ext_resource path="res://assets/BasicPlatformTiles Asset/Asset/Textures/GRassAtlas/GRassAtlas_Normal.png" type="Texture" id=8]
[ext_resource path="res://assets/BasicPlatformTiles Asset/Asset/Textures/TilesAtlas/TilesAtlas_Normal.png" type="Texture" id=9]
[ext_resource path="res://assets/BasicPlatformTiles Asset/Asset/Textures/WoodAtlas/WoodAtlas_Roughness.png" type="Texture" id=10]
[ext_resource path="res://assets/BasicPlatformTiles Asset/Asset/Textures/GRassAtlas/GRassAtlas_Roughness.png" type="Texture" id=11]
[ext_resource path="res://assets/BasicPlatformTiles Asset/Asset/Textures/BrickAtlas/BrickAtlas_Roughness.png" type="Texture" id=12]

[sub_resource type="VisualShaderNodeSwitch" id=1]

[sub_resource type="VisualShaderNodeSwitch" id=2]

[sub_resource type="VisualShaderNodeTextureUniform" id=3]
uniform_name = "Normal2"
texture_type = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=4]
uniform_name = "Albedo3"
texture_type = 1

[sub_resource type="VisualShaderNodeSwitch" id=5]

[sub_resource type="VisualShaderNodeSwitch" id=6]

[sub_resource type="VisualShaderNodeTextureUniform" id=7]
uniform_name = "Albedo4"
texture_type = 1

[sub_resource type="VisualShaderNodeTextureUniform" id=8]
uniform_name = "Roughness3"

[sub_resource type="VisualShaderNodeTextureUniform" id=9]
uniform_name = "Albedo"
texture_type = 1

[sub_resource type="VisualShaderNodeTextureUniform" id=10]
uniform_name = "Roughness4"

[sub_resource type="VisualShaderNodeSwitch" id=11]

[sub_resource type="VisualShaderNodeSwitch" id=12]

[sub_resource type="VisualShaderNodeSwitch" id=13]

[sub_resource type="VisualShaderNodeTextureUniform" id=14]
uniform_name = "Normal3"
texture_type = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=15]
uniform_name = "Normal4"
texture_type = 2

[sub_resource type="VisualShaderNodeSwitch" id=16]

[sub_resource type="VisualShaderNodeBooleanUniform" id=17]
uniform_name = "Texture_1_2_or_3_4"

[sub_resource type="VisualShaderNodeBooleanUniform" id=18]
uniform_name = "Texture_1_or_2"

[sub_resource type="VisualShaderNodeTextureUniform" id=19]
uniform_name = "Normal"
texture_type = 2

[sub_resource type="VisualShaderNodeBooleanUniform" id=20]
uniform_name = "Texture_3_or_4"

[sub_resource type="VisualShaderNodeTextureUniform" id=21]
uniform_name = "Roughness"

[sub_resource type="VisualShaderNodeSwitch" id=22]

[sub_resource type="VisualShaderNodeTextureUniform" id=23]
uniform_name = "Albedo2"
texture_type = 1

[sub_resource type="VisualShaderNodeTextureUniform" id=24]
uniform_name = "Roughness2"

[sub_resource type="VisualShader" id=25]
code = "shader_type spatial;
render_mode specular_schlick_ggx, async_visible;

uniform bool Texture_1_2_or_3_4;
uniform bool Texture_1_or_2;
uniform sampler2D Albedo : hint_albedo;
uniform sampler2D Albedo2 : hint_albedo;
uniform bool Texture_3_or_4;
uniform sampler2D Albedo3 : hint_albedo;
uniform sampler2D Albedo4 : hint_albedo;
uniform sampler2D Roughness;
uniform sampler2D Roughness2;
uniform sampler2D Roughness3;
uniform sampler2D Roughness4;
uniform sampler2D Normal : hint_normal;
uniform sampler2D Normal2 : hint_normal;
uniform sampler2D Normal3 : hint_normal;
uniform sampler2D Normal4 : hint_normal;



void vertex() {
// Output:0

}

void fragment() {
// BooleanUniform:28
	bool n_out28p0 = Texture_1_2_or_3_4;

// BooleanUniform:29
	bool n_out29p0 = Texture_1_or_2;

// TextureUniform:2
	vec3 n_out2p0;
	float n_out2p1;
	{
		vec4 n_tex_read = texture(Albedo, UV.xy);
		n_out2p0 = n_tex_read.rgb;
		n_out2p1 = n_tex_read.a;
	}

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(Albedo2, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorSwitch:5
	vec3 n_out5p0;
	if(n_out29p0)
	{
		n_out5p0 = n_out2p0;
	}
	else
	{
		n_out5p0 = n_out6p0;
	}

// BooleanUniform:30
	bool n_out30p0 = Texture_3_or_4;

// TextureUniform:13
	vec3 n_out13p0;
	float n_out13p1;
	{
		vec4 n_tex_read = texture(Albedo3, UV.xy);
		n_out13p0 = n_tex_read.rgb;
		n_out13p1 = n_tex_read.a;
	}

// TextureUniform:17
	vec3 n_out17p0;
	float n_out17p1;
	{
		vec4 n_tex_read = texture(Albedo4, UV.xy);
		n_out17p0 = n_tex_read.rgb;
		n_out17p1 = n_tex_read.a;
	}

// VectorSwitch:15
	vec3 n_out15p0;
	if(n_out30p0)
	{
		n_out15p0 = n_out13p0;
	}
	else
	{
		n_out15p0 = n_out17p0;
	}

// VectorSwitch:14
	vec3 n_out14p0;
	if(n_out28p0)
	{
		n_out14p0 = n_out5p0;
	}
	else
	{
		n_out14p0 = n_out15p0;
	}

// TextureUniform:4
	vec3 n_out4p0;
	float n_out4p1;
	{
		vec4 n_tex_read = texture(Roughness, UV.xy);
		n_out4p0 = n_tex_read.rgb;
		n_out4p1 = n_tex_read.a;
	}

// TextureUniform:9
	vec3 n_out9p0;
	float n_out9p1;
	{
		vec4 n_tex_read = texture(Roughness2, UV.xy);
		n_out9p0 = n_tex_read.rgb;
		n_out9p1 = n_tex_read.a;
	}

// VectorSwitch:10
	vec3 n_out10p0;
	if(n_out29p0)
	{
		n_out10p0 = n_out4p0;
	}
	else
	{
		n_out10p0 = n_out9p0;
	}

// TextureUniform:19
	vec3 n_out19p0;
	float n_out19p1;
	{
		vec4 n_tex_read = texture(Roughness3, UV.xy);
		n_out19p0 = n_tex_read.rgb;
		n_out19p1 = n_tex_read.a;
	}

// TextureUniform:20
	vec3 n_out20p0;
	float n_out20p1;
	{
		vec4 n_tex_read = texture(Roughness4, UV.xy);
		n_out20p0 = n_tex_read.rgb;
		n_out20p1 = n_tex_read.a;
	}

// VectorSwitch:21
	vec3 n_out21p0;
	if(n_out30p0)
	{
		n_out21p0 = n_out19p0;
	}
	else
	{
		n_out21p0 = n_out20p0;
	}

// VectorSwitch:22
	vec3 n_out22p0;
	if(n_out28p0)
	{
		n_out22p0 = n_out10p0;
	}
	else
	{
		n_out22p0 = n_out21p0;
	}

// TextureUniform:3
	vec3 n_out3p0;
	float n_out3p1;
	{
		vec4 n_tex_read = texture(Normal, UV.xy);
		n_out3p0 = n_tex_read.rgb;
		n_out3p1 = n_tex_read.a;
	}

// TextureUniform:12
	vec3 n_out12p0;
	float n_out12p1;
	{
		vec4 n_tex_read = texture(Normal2, UV.xy);
		n_out12p0 = n_tex_read.rgb;
		n_out12p1 = n_tex_read.a;
	}

// VectorSwitch:11
	vec3 n_out11p0;
	if(n_out29p0)
	{
		n_out11p0 = n_out3p0;
	}
	else
	{
		n_out11p0 = n_out12p0;
	}

// TextureUniform:25
	vec3 n_out25p0;
	float n_out25p1;
	{
		vec4 n_tex_read = texture(Normal3, UV.xy);
		n_out25p0 = n_tex_read.rgb;
		n_out25p1 = n_tex_read.a;
	}

// TextureUniform:26
	vec3 n_out26p0;
	float n_out26p1;
	{
		vec4 n_tex_read = texture(Normal4, UV.xy);
		n_out26p0 = n_tex_read.rgb;
		n_out26p1 = n_tex_read.a;
	}

// VectorSwitch:27
	vec3 n_out27p0;
	if(n_out30p0)
	{
		n_out27p0 = n_out25p0;
	}
	else
	{
		n_out27p0 = n_out26p0;
	}

// VectorSwitch:24
	vec3 n_out24p0;
	if(n_out28p0)
	{
		n_out24p0 = n_out11p0;
	}
	else
	{
		n_out24p0 = n_out27p0;
	}

// Output:0
	ALBEDO = n_out14p0;
	ROUGHNESS = dot(n_out22p0, vec3(0.333333, 0.333333, 0.333333));
	NORMALMAP = n_out24p0;

}

void light() {
// Output:0

}
"
nodes/fragment/0/position = Vector2( 1560, -40 )
nodes/fragment/2/node = SubResource( 9 )
nodes/fragment/2/position = Vector2( 120, -660 )
nodes/fragment/3/node = SubResource( 19 )
nodes/fragment/3/position = Vector2( 500, 620 )
nodes/fragment/4/node = SubResource( 21 )
nodes/fragment/4/position = Vector2( 0, 200 )
nodes/fragment/5/node = SubResource( 22 )
nodes/fragment/5/position = Vector2( 820, -80 )
nodes/fragment/6/node = SubResource( 23 )
nodes/fragment/6/position = Vector2( 120, -500 )
nodes/fragment/9/node = SubResource( 24 )
nodes/fragment/9/position = Vector2( 20, 360 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 440, 220 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( 780, 420 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( 500, 760 )
nodes/fragment/13/node = SubResource( 4 )
nodes/fragment/13/position = Vector2( 120, -320 )
nodes/fragment/14/node = SubResource( 5 )
nodes/fragment/14/position = Vector2( 1140, -20 )
nodes/fragment/15/node = SubResource( 6 )
nodes/fragment/15/position = Vector2( 780, 0 )
nodes/fragment/17/node = SubResource( 7 )
nodes/fragment/17/position = Vector2( 120, -180 )
nodes/fragment/19/node = SubResource( 8 )
nodes/fragment/19/position = Vector2( 60, 500 )
nodes/fragment/20/node = SubResource( 10 )
nodes/fragment/20/position = Vector2( 60, 640 )
nodes/fragment/21/node = SubResource( 11 )
nodes/fragment/21/position = Vector2( 440, 300 )
nodes/fragment/22/node = SubResource( 12 )
nodes/fragment/22/position = Vector2( 1120, 100 )
nodes/fragment/24/node = SubResource( 13 )
nodes/fragment/24/position = Vector2( 1120, 200 )
nodes/fragment/25/node = SubResource( 14 )
nodes/fragment/25/position = Vector2( 500, 900 )
nodes/fragment/26/node = SubResource( 15 )
nodes/fragment/26/position = Vector2( 500, 1040 )
nodes/fragment/27/node = SubResource( 16 )
nodes/fragment/27/position = Vector2( 780, 500 )
nodes/fragment/28/node = SubResource( 17 )
nodes/fragment/28/position = Vector2( 940, -120 )
nodes/fragment/29/node = SubResource( 18 )
nodes/fragment/29/position = Vector2( -20, -40 )
nodes/fragment/30/node = SubResource( 20 )
nodes/fragment/30/position = Vector2( 0, 60 )
nodes/fragment/connections = PoolIntArray( 6, 0, 5, 2, 2, 0, 5, 1, 4, 0, 10, 1, 9, 0, 10, 2, 3, 0, 11, 1, 12, 0, 11, 2, 14, 0, 0, 0, 13, 0, 15, 1, 17, 0, 15, 2, 5, 0, 14, 1, 15, 0, 14, 2, 19, 0, 21, 1, 20, 0, 21, 2, 10, 0, 22, 1, 21, 0, 22, 2, 22, 0, 0, 3, 25, 0, 27, 1, 26, 0, 27, 2, 11, 0, 24, 1, 27, 0, 24, 2, 24, 0, 0, 8, 28, 0, 14, 0, 28, 0, 22, 0, 28, 0, 24, 0, 29, 0, 10, 0, 29, 0, 5, 0, 29, 0, 11, 0, 30, 0, 15, 0, 30, 0, 21, 0, 30, 0, 27, 0 )

[resource]
shader = SubResource( 25 )
shader_param/Texture_1_2_or_3_4 = true
shader_param/Texture_1_or_2 = false
shader_param/Texture_3_or_4 = false
shader_param/Albedo = ExtResource( 2 )
shader_param/Albedo2 = ExtResource( 5 )
shader_param/Albedo3 = ExtResource( 6 )
shader_param/Albedo4 = ExtResource( 4 )
shader_param/Roughness = ExtResource( 12 )
shader_param/Roughness2 = ExtResource( 11 )
shader_param/Roughness3 = ExtResource( 1 )
shader_param/Roughness4 = ExtResource( 10 )
shader_param/Normal = ExtResource( 3 )
shader_param/Normal2 = ExtResource( 8 )
shader_param/Normal3 = ExtResource( 9 )
shader_param/Normal4 = ExtResource( 7 )
